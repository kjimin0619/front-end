{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimin\\\\Documents\\\\front-end\\\\javascript_\\uC2EC\\uD654\\\\Reducer\\\\example\\\\src\\\\Students.js\",\n  _s = $RefreshSig$();\nimport { useReducer, useState } from \"react\";\nimport Student from \"./student\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0,\n  students: []\n};\nfunction reducer(oldState, action) {\n  switch (action.type) {\n    case \"add\":\n      const NewStd = {\n        id: Date.now(),\n        name: action.payload.name,\n        isHere: true\n      };\n      return {\n        count: oldState.count + 1,\n        students: [...oldState.students, NewStd]\n      };\n    case \"delete\":\n      return {\n        count: oldState.count - 1,\n        students: oldState.students.filter(s => s.id !== action.payload.target)\n      };\n    case \"mark\":\n      return {\n        count: oldState.count,\n        student: oldState.students.map(s => {\n          if (s.id === action.payload.target) {\n            return {\n              ...s,\n              isHere: !s.isHere\n            };\n          }\n          return s;\n        })\n      };\n    default:\n      return oldState;\n  }\n}\nconst Students = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [studentsInfo, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Reducer \\uD65C\\uC6A93 - \\uCD9C\\uC11D\\uBD80 \\uC2DC\\uC2A4\\uD15C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uCD1D \\uD559\\uC0DD \\uC218 : \", studentsInfo.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694 \",\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: \"add\",\n          payload: {\n            name\n          }\n        });\n      },\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), studentsInfo.students.map(std => {\n      return /*#__PURE__*/_jsxDEV(Student, {\n        name: std.name,\n        dispatch: dispatch,\n        target: std.id,\n        isHere: std.isHere\n      }, std.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Students, \"Qz0HRTwyEe6Fdhi5pJWgFgmQEqE=\");\n_c = Students;\nexport default Students;\nvar _c;\n$RefreshReg$(_c, \"Students\");","map":{"version":3,"names":["useReducer","useState","Student","jsxDEV","_jsxDEV","initialState","count","students","reducer","oldState","action","type","NewStd","id","Date","now","name","payload","isHere","filter","s","target","student","map","Students","_s","setName","studentsInfo","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","onClick","std","_c","$RefreshReg$"],"sources":["C:/Users/jimin/Documents/front-end/javascript_심화/Reducer/example/src/Students.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\r\nimport Student from \"./student\";\r\n\r\nconst initialState = {\r\n  count: 0,\r\n  students: [],\r\n};\r\n\r\nfunction reducer(oldState, action) {\r\n  switch (action.type) {\r\n    case \"add\":\r\n      const NewStd = {\r\n        id: Date.now(),\r\n        name: action.payload.name,\r\n        isHere: true,\r\n      };\r\n      return {\r\n        count: oldState.count + 1,\r\n        students: [...oldState.students, NewStd],\r\n      };\r\n    case \"delete\":\r\n      return {\r\n        count: oldState.count - 1,\r\n        students: oldState.students.filter(\r\n          (s) => s.id !== action.payload.target\r\n        ),\r\n      };\r\n    case \"mark\":\r\n      return {\r\n        count: oldState.count,\r\n        student: oldState.students.map((s) => {\r\n          if (s.id === action.payload.target) {\r\n            return { ...s, isHere: !s.isHere };\r\n          }\r\n          return s;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return oldState;\r\n  }\r\n}\r\n\r\nconst Students = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [studentsInfo, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Reducer 활용3 - 출석부 시스템</h3>\r\n      <p>총 학생 수 : {studentsInfo.count}</p>\r\n\r\n      <input\r\n        placeholder=\"이름을 입력하세요 \"\r\n        type=\"text\"\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n      ></input>\r\n\r\n      <button\r\n        onClick={() => {\r\n          dispatch({ type: \"add\", payload: { name } });\r\n        }}\r\n      >\r\n        추가\r\n      </button>\r\n      {studentsInfo.students.map((std) => {\r\n        return (\r\n          <Student\r\n            key={std.id}\r\n            name={std.name}\r\n            dispatch={dispatch}\r\n            target={std.id}\r\n            isHere={std.isHere}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}